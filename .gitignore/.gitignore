#include<iostream>
#include<iomanip>
#include<cmath>
#include<string>
#include<vector>
#include<ctime>
#include<cstdlib>
#include<thread>
using namespace std;

void scroll(int value)
{
	for (int counter = 0; counter < value; counter++)
	{
		cout << endl;
		this_thread::sleep_for(chrono::milliseconds(50));
	}
}

void gap(int value)
{
	for (int counter = 0; counter < value; counter++)
		cout << endl;
}

string randomWord()
{
	int selector = rand() % 5;
	vector<string> randomWord(5);
	randomWord[0] = "chocolate";
	randomWord[1] = "discussion";
	randomWord[2] = "caffeine";
	randomWord[3] = "tutorial";
	randomWord[4] = "implementation";
	return randomWord[selector];
}

struct hangman
{
	string word = randomWord();
	vector<char> incorrect;
	vector<char> correct;
	int guesses = 0;
};

void createUnknown(vector<char>& unknown, struct hangman hangman)
{
	for (int counter = 0; counter < hangman.word.length(); counter++)
	{
		unknown.push_back('-');
		cout << unknown[counter];
	}
	cout << endl;
}

void gallowdisplay(struct hangman hangman)
{
	if (hangman.guesses == 0)
	{
		cout << "  __________    " << endl;
		cout << "  |         |   " << endl;
		cout << "            |   " << endl;
		cout << "            |   " << endl;
		cout << "            |   " << endl;
		cout << "            |   " << endl;
		cout << "            |   " << endl;
		cout << "            |   " << endl;
		cout << " ~~~~~~~~~~~~~~~" << endl;
	}
	else if (hangman.guesses == 1)
	{
		cout << "  __________    " << endl;
		cout << "  |         |   " << endl;
		cout << "  0         |   " << endl;
		cout << "            |   " << endl;
		cout << "            |   " << endl;
		cout << "            |   " << endl;
		cout << "            |   " << endl;
		cout << "            |   " << endl;
		cout << " ~~~~~~~~~~~~~~~" << endl;
	}
	else if (hangman.guesses == 2)
	{
		cout << "  __________    " << endl;
		cout << "  |         |   " << endl;
		cout << "  0         |   " << endl;
		cout << "  |         |   " << endl;
		cout << "  |         |   " << endl;
		cout << "            |   " << endl;
		cout << "            |   " << endl;
		cout << "            |   " << endl;
		cout << " ~~~~~~~~~~~~~~~" << endl;
	}
	else if (hangman.guesses == 3)
	{
		cout << "  __________    " << endl;
		cout << "  |         |   " << endl;
		cout << "  0         |   " << endl;
		cout << "  |         |   " << endl;
		cout << "  |         |   " << endl;
		cout << " /          |   " << endl;
		cout << "            |   " << endl;
		cout << "            |   " << endl;
		cout << " ~~~~~~~~~~~~~~~" << endl;
	}
	else if (hangman.guesses == 4)
	{
		cout << "  __________    " << endl;
		cout << "  |         |   " << endl;
		cout << "  0         |   " << endl;
		cout << "  |         |   " << endl;
		cout << "  |         |   " << endl;
		cout << " / \\        |   " << endl;
		cout << "            |   " << endl;
		cout << "            |   " << endl;
		cout << " ~~~~~~~~~~~~~~~" << endl;
	}
	else if (hangman.guesses == 5)
	{
		cout << "  __________    " << endl;
		cout << "  |         |   " << endl;
		cout << "  0         |   " << endl;
		cout << " /|         |   " << endl;
		cout << "  |         |   " << endl;
		cout << " / \\        |   " << endl;
		cout << "            |   " << endl;
		cout << "            |   " << endl;
		cout << " ~~~~~~~~~~~~~~~" << endl;
	}
	else if (hangman.guesses == 6)
	{
		cout << "  __________    " << endl;
		cout << "  |         |   " << endl;
		cout << "  0         |   " << endl;
		cout << " /|\\        |   " << endl;
		cout << "  |         |   " << endl;
		cout << " / \\        |   " << endl;
		cout << "            |   " << endl;
		cout << "            |   " << endl;
		cout << " ~~~~~~~~~~~~~~~" << endl;
		cout << "HOW COULD YOU LET HIM DIE??????" << endl;
		cout << endl << endl << endl;
	}
}

bool searchWord(hangman hangman, vector<char>& unknown, char letter)
{
	int counter = 0;

	while (counter <= hangman.word.size())
	{
		if (hangman.word[counter] == letter)
		{
			for (int counter = 0; counter < hangman.word.length(); counter++)
			{

				if (hangman.word[counter] == letter)
					unknown[counter] = letter;
			}

			cout << endl;
			return true;
		}
		counter++;
	}

}

bool GamePlay()
{
	//variable declaration
	bool result;
	string choice, word;
	char letter;
	hangman hangman;
	vector<char> unknown;
	int counter = 0;

	//begginnig of actual game
	cout << string(80, '_') << endl;
	cout << "The executioner has chosen his word..." << endl;
	this_thread::sleep_for(chrono::seconds(1));
	
	
	cout << "  __________    " << endl;
	cout << "  |         |   " << endl;
	cout << "            |   " << endl;
	cout << "            |   " << endl;
	cout << "            |   " << endl;
	cout << "            |   " << endl;
	cout << "            |   " << endl;
	cout << "            |   " << endl;
	cout << " ~~~~~~~~~~~~~~~" << endl;
	cout << hangman.word << endl;
	createUnknown(unknown, hangman);
	
	
	while (hangman.guesses < 6 && word != hangman.word)
	{
		cout << "Would you like to guess a letter or word?: ";
		cin >> choice;
		//Letter check portion
		if (choice == "Letter" || choice == "letter")
		{
			cout << "Please enter your guess: ";
			cin >> letter;
			gap(50);
			if (searchWord(hangman, unknown, letter) == true)
			{
				
				gallowdisplay(hangman);

				for (int counter = 0; counter < hangman.word.length(); counter++)
				{
					cout << unknown[counter];
				}
				scroll(2);
				hangman.correct.push_back(letter);
				scroll(2);
				cout << "The letter " << letter << " is most definitely in the word" << endl;
				scroll(2);
				//gap(5);
			
				result = true;
			}
			else
			{

				gallowdisplay(hangman);

				for (int counter = 0; counter < hangman.word.length(); counter++)
				{
					cout << unknown[counter];
				}
				scroll(2);
				hangman.incorrect.push_back(letter);
				cout << "The letter " << letter << " IS NOT in the word" << endl;
				cout << endl;
				hangman.guesses++;
				//gap(5);
			
				result = false;
			}
		}
		//word check portion
		else if (choice == "Word" || "word")
		{
			cout << "Please enter your Guess: ";
			cin >> word;
			gap(50);
			if (hangman.word == word)
			{
				gallowdisplay(hangman);
				cout << "CONGRATULATIONS, you guessed the word correctly!!" << endl;
				this_thread::sleep_for(chrono::seconds(2));
				cout << "The executioner will release the man, you saved his life, well done" << endl;
				result = true;
				scroll(5);
				break;
			}

			else
			{
				cout << "Sorry, the word that you guesssed was not correct" << endl;
				hangman.guesses++;
				gallowdisplay(hangman);
				scroll(5);
				result = false;
			}
		}
		cout << "The letters that you have guess correctly are: ";
		for (int index = 0; index < hangman.correct.size(); index++)
		{
			cout << hangman.correct[index] << " ";
		}
		gap(3);
		cout << "The letters that you have guessed incorrectly are: ";
		for (int index = 0; index < hangman.incorrect.size(); index++)
		{
			cout << hangman.incorrect[index] << " ";
		}
		gap(3);
		cout << "You have " << 6 - hangman.guesses << " guesses left" << endl;
		gap(2);
	}
	return result;
}

int main()
{
	char again = 'y';
	int wins = 0;
	int losses = 0;

	srand(time(NULL));
	cout << "Would you like to play a game? (Y/N) ";
	cin >> again;
	if (again == 'y')
	{
		//prologue
		cout << "Quick this man needs help..." << endl;
		this_thread::sleep_for(chrono::seconds(1));
		scroll(2);
		cout << "In order to save his life you need to correctly guess the word the executioner is thinking of..." << endl;
		this_thread::sleep_for(chrono::seconds(2));
		scroll(2);
		cout << "Don't worry though you have the ability to guess incorrectly six times before he's executed..." << endl;
		this_thread::sleep_for(chrono::seconds(2));
		scroll(2);
		cout << "Let's begin..." << endl;
		this_thread::sleep_for(chrono::seconds(1));
		scroll(2);
		scroll(20);
		gap(20);
	}

	while (again != 'n')
	{


		if (GamePlay() == true)
			wins++;
		else
			losses++;

		cout << "Wins: " << wins << endl;
		cout << "Losses: " << losses << endl;

		cout << "Would you like to Play again? (Y/N) ";
		cin >> again;
	
	}
	
}
